/*
 * UserMaster.java
 *
 */

import java.sql.Statement;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;

/**
 *
 * @author  Administrator
 */
public class UserMaster extends javax.swing.JFrame {
    MainClass mc=new MainClass();
    ResultSet rsuser;
    int rspos=0;
    int rscount=0;
    boolean chadd=false;
    /** Creates new form UserMaster */
    public UserMaster() {
        initComponents();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        TxtUserName = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        TxtPassword = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        CmbUserType = new javax.swing.JComboBox();
        ChkUserActive = new javax.swing.JCheckBox();
        CmdFirst = new javax.swing.JButton();
        CmdPrevious = new javax.swing.JButton();
        CmdNext = new javax.swing.JButton();
        CmdLast = new javax.swing.JButton();
        CmdNew = new javax.swing.JButton();
        CmdEdit = new javax.swing.JButton();
        CmdSave = new javax.swing.JButton();
        CmdClose = new javax.swing.JButton();
        LblPosition = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("e-Library : User Master");
        setBackground(new java.awt.Color(255, 204, 204));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Gill Sans MT", 0, 14)); // NOI18N
        jLabel3.setText("User Name :");

        jLabel4.setBackground(new java.awt.Color(255, 255, 255));
        jLabel4.setFont(new java.awt.Font("Gill Sans MT", 0, 14)); // NOI18N
        jLabel4.setText("Password :");

        jLabel1.setFont(new java.awt.Font("Gill Sans MT", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 51, 0));
        jLabel1.setText("e-Library - User Master");

        jLabel8.setFont(new java.awt.Font("Gill Sans MT", 0, 14)); // NOI18N
        jLabel8.setText("User Type :");

        CmbUserType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        ChkUserActive.setFont(new java.awt.Font("Gill Sans MT", 0, 14)); // NOI18N
        ChkUserActive.setText("Member Active");

        CmdFirst.setFont(new java.awt.Font("Gill Sans MT", 3, 14)); // NOI18N
        CmdFirst.setText("First");
        CmdFirst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CmdFirstActionPerformed(evt);
            }
        });

        CmdPrevious.setFont(new java.awt.Font("Gill Sans MT", 3, 14)); // NOI18N
        CmdPrevious.setText("Previous");
        CmdPrevious.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CmdPreviousActionPerformed(evt);
            }
        });

        CmdNext.setFont(new java.awt.Font("Gill Sans MT", 3, 14)); // NOI18N
        CmdNext.setText("Next");
        CmdNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CmdNextActionPerformed(evt);
            }
        });

        CmdLast.setFont(new java.awt.Font("Gill Sans MT", 3, 14)); // NOI18N
        CmdLast.setText("Last");
        CmdLast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CmdLastActionPerformed(evt);
            }
        });

        CmdNew.setFont(new java.awt.Font("Gill Sans MT", 3, 14)); // NOI18N
        CmdNew.setText("New");
        CmdNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CmdNewActionPerformed(evt);
            }
        });

        CmdEdit.setFont(new java.awt.Font("Gill Sans MT", 3, 14)); // NOI18N
        CmdEdit.setText("Edit");
        CmdEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CmdEditActionPerformed(evt);
            }
        });

        CmdSave.setFont(new java.awt.Font("Gill Sans MT", 3, 14)); // NOI18N
        CmdSave.setText("Save");
        CmdSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CmdSaveActionPerformed(evt);
            }
        });

        CmdClose.setFont(new java.awt.Font("Gill Sans MT", 3, 14)); // NOI18N
        CmdClose.setText("Close");
        CmdClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CmdCloseActionPerformed(evt);
            }
        });

        LblPosition.setFont(new java.awt.Font("Gill Sans MT", 0, 14)); // NOI18N
        LblPosition.setText("Position");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(CmdFirst)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(CmdPrevious)
                .addGap(18, 18, 18)
                .addComponent(CmdNext)
                .addGap(18, 18, 18)
                .addComponent(CmdLast)
                .addGap(18, 18, 18)
                .addComponent(CmdNew)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 92, Short.MAX_VALUE)
                .addComponent(CmdEdit)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(CmdSave)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(CmdClose)
                .addGap(25, 25, 25))
            .addGroup(layout.createSequentialGroup()
                .addGap(71, 71, 71)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(LblPosition)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel3)
                        .addComponent(jLabel8)
                        .addComponent(jLabel4)))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(ChkUserActive)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(CmbUserType, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(TxtPassword)
                            .addComponent(TxtUserName))
                        .addGap(340, 340, 340))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(203, 203, 203))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(TxtUserName, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(TxtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel3)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(CmbUserType, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(29, 29, 29)
                .addComponent(ChkUserActive)
                .addGap(49, 49, 49)
                .addComponent(LblPosition)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CmdFirst)
                    .addComponent(CmdPrevious)
                    .addComponent(CmdNext)
                    .addComponent(CmdLast)
                    .addComponent(CmdEdit)
                    .addComponent(CmdSave)
                    .addComponent(CmdNew)
                    .addComponent(CmdClose))
                .addContainerGap(110, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CmdFirstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CmdFirstActionPerformed
        try {
            rsuser.first();
            Display();
            
        } catch (Exception e) {
            System.err.println(e);
            
        }
    }//GEN-LAST:event_CmdFirstActionPerformed

    private void CmdPreviousActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CmdPreviousActionPerformed
        try {
            if (rsuser.isFirst()==true) {
                JOptionPane.showMessageDialog(null,"Already in first record.");
                return;
                
            }
            
            rsuser.previous();
            Display();
            
        } catch (Exception e) {
            System.err.println(e);
            
        }
    }//GEN-LAST:event_CmdPreviousActionPerformed

    private void CmdNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CmdNextActionPerformed
        try {
            if (rsuser.isLast()==true) {
                JOptionPane.showMessageDialog(null,"Already in last record.");
                return;
                
            }
            rsuser.next();
            Display();
            
        } catch (Exception e) {
            System.err.println(e);
            
        }
    }//GEN-LAST:event_CmdNextActionPerformed

    private void CmdLastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CmdLastActionPerformed
        try {
            rsuser.last();
            Display();
            
        } catch (Exception e) {
            System.err.println(e);
            //System.exit(1);
        }
    }//GEN-LAST:event_CmdLastActionPerformed

    private void CmdNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CmdNewActionPerformed
        chadd=true;
        ClearText();
    }//GEN-LAST:event_CmdNewActionPerformed

    private void CmdEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CmdEditActionPerformed
        chadd=false;
    }//GEN-LAST:event_CmdEditActionPerformed

    private void CmdSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CmdSaveActionPerformed
        //validate entry and save record
        try {
            
            if (TxtUserName.getText().trim().length()==0 ) {
                JOptionPane.showMessageDialog(null,"Enter user name.");
                return;
            }
            
            if (TxtPassword.getText().trim().length()==0 ) {
                JOptionPane.showMessageDialog(null,"Enter password.");
                return;
            }

            
            
            
            
            //String strqr="";
            Connection connection;
            connection=DriverManager.getConnection(mc.StrUrl,mc.StrUid,mc.StrPwd);
           Statement stmt = connection.createStatement();
            ResultSet rs;
 System.out.println("Point A0"); //test stub
            if (chadd==true ) {
                
                rsuser.moveToInsertRow();
    System.out.println("Point A1"); 
    
    
    
                rsuser.updateString("user_name",TxtUserName.getText());
                rsuser.updateString("user_password",TxtPassword.getText());
                rsuser.updateString("user_type",CmbUserType.getSelectedItem().toString());
                
                if (ChkUserActive.isSelected()==true) {
                    rsuser.updateString("user_active","YES");
                } else {
                    rsuser.updateString("user_active","NO");
                }
                
                rsuser.insertRow();
     System.out.println("Point A2");           
                rsuser.last();
                
      System.out.println("Point A3");
            } 
            else {
                rsuser.updateString("user_password",TxtPassword.getText());
                rsuser.updateString("user_type",CmbUserType.getSelectedItem().toString());
                
                if (ChkUserActive.isSelected()==true) {
                    rsuser.updateString("user_active","YES");
                } else {
                    rsuser.updateString("user_active","NO");
                }
                
                
                
                rsuser.updateRow();
                rsuser.refreshRow();
            }
             stmt=connection.prepareStatement("");
            rs = stmt.executeQuery("select count(*) from lib_user");
            while(rs.next()){                                      // rs.first();
            rscount=rs.getInt(1);} 
              Display();
            chadd=false;
            JOptionPane.showMessageDialog(null,"Record updated.");
        } catch (Exception e) {
            System.err.println(e);
            JOptionPane.showMessageDialog(null,"Unable to save record.");
            return;
        }
    }//GEN-LAST:event_CmdSaveActionPerformed

    private void CmdCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CmdCloseActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_CmdCloseActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
               try
        {
            
            this.setLocationRelativeTo(null);
            
            ClearText();
            CmbUserType.removeAllItems();
            CmbUserType.addItem("Admin");
            CmbUserType.addItem("User");
        
            Connection connection;          
            connection=DriverManager.getConnection(mc.StrUrl,mc.StrUid,mc.StrPwd);
            ResultSet rs;
                  
            PreparedStatement stmt;
            //get user count
            stmt=connection.prepareStatement("select count(*) from lib_user");
            rs = stmt.executeQuery();
            while(rs.next()){                                      // rs.first();
            rscount=rs.getInt(1);}                     

            //get user details
            Statement stmt1 = connection.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
            String sqlQuery = "select * from lib_user ";
            rsuser = stmt1.executeQuery(sqlQuery);
            
            //display first record
            rsuser.first();
                 
            Display();         

        }
        catch (Exception e)
        {
            System.err.println(e);
            //System.exit(1);
        }
 
    }//GEN-LAST:event_formWindowOpened
    private void Display()
    {
        try
        {
            //clear text of fields for entry/display old data
            
            TxtUserName.setText(rsuser.getString("user_name"));
            TxtPassword.setText(rsuser.getString("user_password"));
            CmbUserType.setSelectedItem(rsuser.getString("user_type"));
            
            if (rsuser.getString("user_active").equals("YES"))
            {
                ChkUserActive.setSelected(true);
            }
            else
            {
                ChkUserActive.setSelected(false);
            }
            
            LblPosition.setText("Record position : " + rsuser.getRow() + "/" + String.valueOf(rscount));
        }
        catch (Exception e)
        {
            System.err.println(e);
            
        }
    }
    
    private void ClearText()
    {
        //clear text of fields for entry/display old data
        TxtUserName.setText("");
        TxtPassword.setText("");
        ChkUserActive.setSelected(false);

        
        LblPosition.setText("");
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UserMaster().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox ChkUserActive;
    private javax.swing.JComboBox CmbUserType;
    private javax.swing.JButton CmdClose;
    private javax.swing.JButton CmdEdit;
    private javax.swing.JButton CmdFirst;
    private javax.swing.JButton CmdLast;
    private javax.swing.JButton CmdNew;
    private javax.swing.JButton CmdNext;
    private javax.swing.JButton CmdPrevious;
    private javax.swing.JButton CmdSave;
    private javax.swing.JLabel LblPosition;
    private javax.swing.JTextField TxtPassword;
    private javax.swing.JTextField TxtUserName;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel8;
    // End of variables declaration//GEN-END:variables
    
}
